name: Monitoring and Alerts

on:
  schedule:
    # Check every 15 minutes
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Check Production Health
        id: health
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://your-app.vercel.app/api/health)
          echo "status_code=$RESPONSE" >> $GITHUB_OUTPUT

          if [ $RESPONSE -ne 200 ]; then
            echo "Health check failed with status: $RESPONSE"
            exit 1
          fi

      - name: Check Database Connectivity
        run: |
          # This would typically use Supabase health endpoint
          echo "Database check placeholder"

      - name: Check Response Time
        id: response_time
        run: |
          START=$(date +%s%N)
          curl -s https://your-app.vercel.app/api/politicians?limit=10 > /dev/null
          END=$(date +%s%N)
          DURATION=$(( (END - START) / 1000000 ))
          echo "response_time=$DURATION" >> $GITHUB_OUTPUT

          echo "Response time: ${DURATION}ms"

          if [ $DURATION -gt 2000 ]; then
            echo "Warning: Response time exceeds threshold (2000ms)"
            exit 1
          fi

      - name: Send Alert on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸš¨ Monitoring Alert: Service Health Check Failed`,
              body: `
              ## Alert Details
              - **Time**: ${new Date().toISOString()}
              - **Status**: Health check failed
              - **Workflow**: ${context.workflow}
              - **Run URL**: https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}

              ## Action Required
              Please investigate the production environment immediately.
              `,
              labels: ['alert', 'production', 'high-priority']
            });

      - name: Log Metrics
        run: |
          echo "Health Status: ${{ steps.health.outputs.status_code }}"
          echo "Response Time: ${{ steps.response_time.outputs.response_time }}ms"
          echo "Timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"

  uptime-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Check Multiple Endpoints
        run: |
          ENDPOINTS=(
            "/api/health"
            "/api/politicians?limit=1"
            "/"
          )

          FAILED=0

          for endpoint in "${ENDPOINTS[@]}"; do
            URL="https://your-app.vercel.app${endpoint}"
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL")

            if [ $STATUS -eq 200 ]; then
              echo "âœ“ $endpoint - OK ($STATUS)"
            else
              echo "âœ— $endpoint - FAILED ($STATUS)"
              FAILED=$((FAILED + 1))
            fi
          done

          if [ $FAILED -gt 0 ]; then
            echo "$FAILED endpoint(s) failed"
            exit 1
          fi

  security-headers-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Check Security Headers
        run: |
          echo "Checking security headers..."

          HEADERS=$(curl -s -D - https://your-app.vercel.app -o /dev/null)

          check_header() {
            HEADER=$1
            if echo "$HEADERS" | grep -i "$HEADER" > /dev/null; then
              echo "âœ“ $HEADER present"
              return 0
            else
              echo "âœ— $HEADER missing"
              return 1
            fi
          }

          FAILED=0

          check_header "X-Frame-Options" || FAILED=$((FAILED + 1))
          check_header "X-Content-Type-Options" || FAILED=$((FAILED + 1))
          check_header "Strict-Transport-Security" || FAILED=$((FAILED + 1))
          check_header "Content-Security-Policy" || FAILED=$((FAILED + 1))

          if [ $FAILED -gt 0 ]; then
            echo "Warning: $FAILED security header(s) missing"
          fi

  ssl-certificate-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Check SSL Certificate
        run: |
          EXPIRY=$(echo | openssl s_client -servername your-app.vercel.app -connect your-app.vercel.app:443 2>/dev/null | openssl x509 -noout -enddate | cut -d= -f2)
          EXPIRY_EPOCH=$(date -d "$EXPIRY" +%s)
          NOW_EPOCH=$(date +%s)
          DAYS_LEFT=$(( ($EXPIRY_EPOCH - $NOW_EPOCH) / 86400 ))

          echo "SSL Certificate expires: $EXPIRY"
          echo "Days remaining: $DAYS_LEFT"

          if [ $DAYS_LEFT -lt 30 ]; then
            echo "Warning: SSL certificate expires in less than 30 days"
            exit 1
          fi
