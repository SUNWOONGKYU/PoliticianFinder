name: E2E Tests

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - '.github/workflows/e2e-tests.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        project:
          - chromium-desktop
          - firefox-desktop
          - mobile-chrome

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps ${{ matrix.project == 'chromium-desktop' && 'chromium' || matrix.project == 'firefox-desktop' && 'firefox' || 'chromium' }}

      - name: Build application
        working-directory: ./frontend
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run E2E tests
        working-directory: ./frontend
        run: npx playwright test --project=${{ matrix.project }}
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:3000

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.project }}
          path: |
            frontend/test-results/
            frontend/playwright-report/
          retention-days: 7

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.project }}
          path: frontend/playwright-report/
          retention-days: 30

      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ matrix.project }}
          path: frontend/test-results/**/screenshots/
          retention-days: 7

      - name: Upload videos on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: videos-${{ matrix.project }}
          path: frontend/test-results/**/videos/
          retention-days: 7

  test-coverage:
    name: Calculate Test Coverage
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-results-*
          path: frontend/test-results/
          merge-multiple: true

      - name: Generate coverage report
        working-directory: ./frontend
        run: |
          echo "Test coverage analysis..."
          if [ -f "test-results/results.json" ]; then
            cat test-results/results.json
          fi

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'frontend/test-results/results.json';

            let comment = '## E2E Test Results\n\n';

            if (fs.existsSync(path)) {
              const results = JSON.parse(fs.readFileSync(path, 'utf8'));
              comment += `- Total tests: ${results.suites?.length || 0}\n`;
              comment += `- Passed: ${results.stats?.passed || 0}\n`;
              comment += `- Failed: ${results.stats?.failed || 0}\n`;
              comment += `- Skipped: ${results.stats?.skipped || 0}\n`;
            } else {
              comment += 'Test results not available.\n';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  playwright-report:
    name: Publish Playwright Report
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()

    steps:
      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          path: all-reports/
          merge-multiple: true

      - name: Publish HTML Report
        uses: actions/upload-pages-artifact@v3
        with:
          path: all-reports/

      - name: Comment with report link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## Playwright Test Report

            The full HTML report is available as an artifact in this workflow run.

            [View Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
